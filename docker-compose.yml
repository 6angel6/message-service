version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
    networks:
      - msg-processor

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: "postgres"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "666"
    ports:
      - "5436:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - msg-processor

  migrate:
    restart: on-failure
    env_file:
      - .env
    image: migrate/migrate
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migration:/migration
    command:
      ["-path", "/migration", "-database", "postgres://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}?sslmode=disable", "up"]
    networks:
      - msg-processor

  zookeeper:
      image: "bitnami/zookeeper:latest"
      ports:
        - "2181:2181"
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
      networks:
        - msg-processor

  kafka:
      image: "bitnami/kafka:latest"
      ports:
        - "9092:9092"
      environment:
        - KAFKA_BROKER_ID=1
        - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,OUTSIDE://localhost:29092
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
        - KAFKA_CFG_LISTENER_NAME_PREFIXES=PLAINTEXT,OUTSIDE
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
      depends_on:
        - zookeeper
      networks:
        - msg-processor

networks:
  msg-processor:
    driver: bridge

